// 1. Реализовать функцию, которая избавится от повторяющихся подряд символов: ('aaaaabbbbbcccdaaaabbbb') => 'abcdab';

// let a = 'aasssaaabbbbbcffccdaaaabbbeeeb';



// 2. Дано два массива, вернуть массив их общих элементов исходных массивов:  [1, 2, 3, 4] и [3, 4, 5, 6] => результат - [3, 4];

// let c = [1, 2, 3, 4];
// let b = [3, 4, 5, 6];



// 3. Дана строка. Вернуть объект, ключи которого - символы строки, а значение - кол-во этого символа в строке. ('aaabcc') => {a: 3, b: 1, c: 2}

// let str = 'aaabcc';



// 4. Что будет в консоли?

// let o = {
//   one: 1,
//   two: function() {
//     console.log(this.one);
//   },
// }

// let a = {
//   one: 2,
//   z: o.two(),
// }

// console.log(a.z);



// 5. Что будет в консоли?

// let o = {
//   one: 1,
//   b: () => {
//     console.log(this.one);
//   }
// }

// let a = {
//   one: 2,
//   z: o.b(),
// }

// console.log(a.z);



// 6. Найти узел по id в дереве элементов.

// const myTree = [
//   {
//     id: 1,
//     children: [
//     {
//       id: 4,
//       children: null,
//       title: 'asdasd',
//     },
//     {
//       id: 5,
//       children: [
//       {
//         id: 6,
//         children: null,
//         title: 'asdasd',
//       },
//       {
//         id: 7,
//         children: null,
//         title: 'asdasd',
//       },
//       ],
//     title: 'asdasd',
//     },
//   ],
//   title: 'asdasd',
//   },
//   {
//     id: 2,
//     children: null,
//     title: 'asdasd',
//   },
//   {
//     id: 3,
//     children: null,
//     title: 'asdasd',
//   },
// ]



// 7. Найти максимальную длину между двумя значениями в стркое.

// let str = 'abcgdsijrnualu';



// 8. Очистить массив от анограм

// let arr = ["nap", "teachers", "cheaters", "PAN", "ear", "era", "hectares"];



// 9. Напишите функцию, которая проверяет что число является палиндромом(зеркальное).

// let num = 12221;



// 10. Напишите функцию, которая проверяет что 2 слова являются анаграммами. Анаграмма — это слово или фраза, образованная путем перестановки букв другого слова или фразы, обычно с использованием всех исходных букв ровно один раз.



// 11. Напишите функцию, которая вычисляет факториал заданного числа.



// 12. Напишите функцию calculateAverageAge, которая принимает на вход массив объектов, представляющих людей, и возвращает средний возраст всех людей.

// const people = [
//   { name: 'Alice', age: 25 },
//   { name: 'Bob', age: 30 },
//   { name: 'Charlie', age: 35 }
// ];



// 13. Напишите функцию, которая принимает на вход массив чисел и возвращает сумму всех положительных элементов массива.



// 14. Напишите функцию, которая принимает на вход 2 строки и возвращает объект, содержащий количество вхождений каждого символа в строке.



// 15. Написать мемоизированную функцию, которая будет кешировать результаты выполнения.



// 16. Что будет в консоли?

// class A {
//   a = 1;

//   f3() {
//     console.log(this.a);
//   };

//   f2 = function() {
//     console.log(this.a);
//   };

//   f1 = () => super.someMethod();
// }

// const a = new A();

// a.f1();
// a.f2();
// a.f3();

// setTimeout(a.f2, 1000);
// setTimeout(a.f3(), 1000);



// 17. Найти наибольшее и наименьшее значение в многомерном массиве.

// let array = [3, 6, [7,8], 9, [[4,5,[1,2]]]]



// 18. Дана строка, где каждое слово содержит одно число от 1 до 9. Отсортируйте строку по числам: "is2 Thi1s T4est 3a"  -->  "Thi1s is2 3a T4est".

// let str = "4of Fo1r pe6ople g3ood th5e the2";



// 19. Напишите функцию, которая принимает на вход массив объектов и сортирует его по заданному свойству.

// const students = [
//   { name: 'Alice', age: 20 },
//   { name: 'Bob', age: 18 },
//   { name: 'Charlie', age: 22 }
// ];

// function sortByProperty(arr, property) {

// }


//console.log(sortByProperty(students, 'age'));

/* Output:
[
  { name: 'Bob', age: 18 },
  { name: 'Alice', age: 20 },
  { name: 'Charlie', age: 22 }
]
*/